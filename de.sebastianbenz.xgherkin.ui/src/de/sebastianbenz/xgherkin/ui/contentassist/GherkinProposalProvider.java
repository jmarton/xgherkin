/*******************************************************************************
 * Copyright (c) 2011 Sebastian Benz.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Sebastian Benz - initial API and implementation
 ******************************************************************************/
/*
* generated by Xtext
*/
package de.sebastianbenz.xgherkin.ui.contentassist;

import static org.eclipse.xtext.EcoreUtil2.getContainerOfType;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import de.sebastianbenz.xgherkin.gherkin.ExampleCell;
import de.sebastianbenz.xgherkin.gherkin.ExampleRow;
import de.sebastianbenz.xgherkin.gherkin.ScenarioWithOutline;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class GherkinProposalProvider extends AbstractGherkinProposalProvider {

	public void complete_Step(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		if(!context.getPrefix().trim().endsWith("<")){
			return;
		}
		ScenarioWithOutline scenarioWithOutline = getContainerOfType(model, ScenarioWithOutline.class);
		if(scenarioWithOutline == null){
			return;
		}
		ExampleRow heading = scenarioWithOutline.getHeading();
		if(heading == null){
			return;
		}
		for (ExampleCell cell : heading.getCells()) {
			String cellValue = cell.getValue().replaceAll("\\|", "").trim();
			acceptor.accept(createCompletionProposal(context.getPrefix() + cellValue, cellValue, null, context));
		}
	}
}
